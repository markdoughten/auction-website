swagger: "2.0"
info:
  description: "Auction Website API"
  version: "1.0.0"
  title: "Auction Website API"
host: "localhost:5000"
basePath: "/"
tags:
- name: "user"
  description: "User management"
- name: "Q&A"
  description: "Q & A operations"
- name: "item_meta"
  description: "Manage item metadata"
- name: "item"
  description: "Manage items"
- name: "auction"
  description: "Manage auctions"
- name: "bid"
  description: "Manage bids"
- name: "alert"
  description: "Manage alerts"

schemes:
- "http"
paths:
  /users/{id}:
    get:
      tags:
      - "user"
      summary: "Get user by id"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Numeric ID of the user to get.
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
      - "user"
      summary: "Edit user by id"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: id
        type: integer
        required: true
        description: Numeric ID of the user to edit.
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/UserReq"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
            
    delete:
      tags:
      - "user"
      summary: "Delete user by id"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Numeric ID of the user to delete.
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"  
  /users:
    post:
      tags:
      - "user"
      summary: "Create user"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/UserReq"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
      - "user"
      summary: "Get ALL users"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Get user objects"
        required: true
        schema:
          $ref: "#/definitions/GetUsers"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/UsersList"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    
    delete:
      tags:
      - "user"
      summary: "Delete ALL users"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GenericResponse"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  
  
          
  /user/login:
    post:
      tags:
      - "user"
      summary: "Login"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "credentials"
        required: true
        schema:
          $ref: "#/definitions/LoginReq"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/GenericResponse"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /user/logout:
    post:
      tags:
      - "user"
      summary: "Logout"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/GenericResponse"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  
  
  /question/{id}:
    get:
      tags:
      - "Q&A"
      summary: "Get question by id"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Numeric ID of the question to get.
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Question"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    
    put:
      tags:
      - "Q&A"
      summary: "Edit question by id"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: id
        type: integer
        required: true
        description: Numeric ID of the quesiton to edit.
      - in: "body"
        name: "body"
        description: "Created question object"
        required: true
        schema:
          $ref: "#/definitions/QuestionReq"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Question"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
            
    delete:
      tags:
      - "Q&A"
      summary: "Delete question by id"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Numeric ID of the question to delete.
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Question"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  
  
  /questions:
    post:
      tags:
      - "Q&A"
      summary: "Post new question"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created question object"
        required: true
        schema:
          $ref: "#/definitions/QuestionReq"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Question"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
      
    get:
      tags:
      - "Q&A"
      summary: "Get questions with answers"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Filters for get questions"
        required: true
        schema:
          $ref: "#/definitions/GetQuestions"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/QuestionsList"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
            
            
    delete:
      tags:
      - "Q&A"
      summary: "Delete ALL questions"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GenericResponse"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"          
            
    
    
     
         
  /answer/{id}:
    get:
      tags:
      - "Q&A"
      summary: "Get answer by id"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Numeric ID of the answer to get.
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Answer"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  
    put:
      tags:
      - "Q&A"
      summary: "Edit answer by id"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: id
        type: integer
        required: true
        description: Numeric ID of the answer to edit.
      - in: "body"
        name: "body"
        description: "Created answer object"
        required: true
        schema:
          $ref: "#/definitions/AnswerReq"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Answer"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
      
    delete:
      tags:
      - "Q&A"
      summary: "Delete answer by id"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Numeric ID of the answer to delete.
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Answer"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
            
  /answers:
    post:
      tags:
      - "Q&A"
      summary: "Post new answer"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created answer"
        required: true
        schema:
          $ref: "#/definitions/AnswerReq"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Question"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  
  
  /item_meta/categories/{id}:
    get:
      tags:
      - "item_meta"
      summary: "Get category by id"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Numeric ID of the category to get.
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Category"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
      - "item_meta"
      summary: "Get category by id"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Numeric ID of the category to get.
        - in: "body"
          name: "body"
          description: "Created category object"
          required: true
          schema:
            $ref: "#/definitions/CategoryReq"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Category"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    
    delete:
      tags:
      - "item_meta"
      summary: "Delete category by id"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Numeric ID of the category to delete.
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Category"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  
  /item_meta/categories:
    post:
      tags:
      - "item_meta"
      summary: "Create new category"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created category"
        required: true
        schema:
          $ref: "#/definitions/CategoryReq"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Category"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  
    get:
      tags:
      - "item_meta"
      summary: "Get categories"
      produces:
      - "application/json"
      parameters:
      - in: "query"
        name: "page"
        type: integer
        description: "Page number"
        required: true
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/CategoriesList"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
            
            
    delete:
      tags:
      - "item_meta"
      summary: "Delete ALL categories"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GenericResponse"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  
  
  
  
  
  
  
  
  
  
  
  /item_meta/subcategories/{id}:
    get:
      tags:
      - "item_meta"
      summary: "Get subcategory by id"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Numeric ID of the subcategory to get.
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SubCategory"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
      - "item_meta"
      summary: "Get subcategory by id"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Numeric ID of the subcategory to edit.
        - in: "body"
          name: "body"
          description: "Created subcategory object"
          required: true
          schema:
            $ref: "#/definitions/SubCategoryReq"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SubCategory"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    
    delete:
      tags:
      - "item_meta"
      summary: "Delete subcategory by id"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Numeric ID of the subcategory to delete.
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SubCategory"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  
  /item_meta/subcategories:
    post:
      tags:
      - "item_meta"
      summary: "Create new subcategory"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created subcategory"
        required: true
        schema:
          $ref: "#/definitions/SubCategoryReq"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SubCategory"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  
    get:
      tags:
      - "item_meta"
      summary: "Get subcategories"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Filters for get subcategories"
        required: true
        schema:
          $ref: "#/definitions/GetSubCategories"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SubCategoriesList"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
            
            
    delete:
      tags:
      - "item_meta"
      summary: "Delete ALL subcategories"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GenericResponse"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  
  
  
  /item_meta/attribute/{id}:
    get:
      tags:
      - "item_meta"
      summary: "Get attribute by id"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Numeric ID of the attribute to get.
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Attribute"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
      - "item_meta"
      summary: "Edit attribute by id"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Numeric ID of the attribute to edit.
        - in: "body"
          name: "body"
          description: "Created attribute object"
          required: true
          schema:
            $ref: "#/definitions/AttributeReq"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Attribute"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    
    delete:
      tags:
      - "item_meta"
      summary: "Delete attribute by id"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Numeric ID of the attribtue to delete.
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Attribute"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  
  /item_meta/attributes:
    post:
      tags:
      - "item_meta"
      summary: "Create new attribute"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created attribtue"
        required: true
        schema:
          $ref: "#/definitions/AttributeReq"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Attribute"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  
    get:
      tags:
      - "item_meta"
      summary: "Get attributes"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Filters for get attributes"
        required: true
        schema:
          $ref: "#/definitions/GetAttributes"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AttributesList"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
            
            
    delete:
      tags:
      - "item_meta"
      summary: "Delete ALL attributes"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GenericResponse"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  
  
  
  
  
  /items/{id}:
    get:
      tags:
      - "item"
      summary: "Get item by id"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Numeric ID of the item to get.
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Item"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
      - "item"
      summary: "Edit item by id"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Numeric ID of the item to edit.
        - in: "body"
          name: "body"
          description: "Created item object"
          required: true
          schema:
            $ref: "#/definitions/ItemReq"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Item"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    
    delete:
      tags:
      - "item"
      summary: "Delete item by id"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Numeric ID of the item to delete.
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Item"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  
  /items:
    post:
      tags:
      - "item"
      summary: "Create new item"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created item"
        required: true
        schema:
          $ref: "#/definitions/ItemReq"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Item"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  
    get:
      tags:
      - "item"
      summary: "Get items"
      produces:
      - "application/json"
      parameters:
      - in: "query"
        name: "page"
        description: "Page number"
        required: true
        type: integer
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ItemsList"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
            
            
    delete:
      tags:
      - "item"
      summary: "Delete ALL items"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GenericResponse"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  
  
  
  
  
  
  
  
  /auction/{id}:
    get:
      tags:
      - "auction"
      summary: "Get auction by id"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Numeric ID of the auction to get.
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Auction"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
      - "auction"
      summary: "Edit auction by id"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Numeric ID of the auction to edit.
        - in: "body"
          name: "body"
          description: "Created auction object"
          required: true
          schema:
            $ref: "#/definitions/AuctionReq"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Auction"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    
    delete:
      tags:
      - "auction"
      summary: "Delete auction by id"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Numeric ID of the auction to delete.
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Auction"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  
  /auctions:
    post:
      tags:
      - "auction"
      summary: "Create new auction"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created auction"
        required: true
        schema:
          $ref: "#/definitions/AuctionReq"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Auction"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  
    get:
      tags:
      - "auction"
      summary: "Get auctions"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Filters for get auctions"
        required: true
        schema:
          $ref: "#/definitions/GetAuctions"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AuctionsList"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
            
            
    delete:
      tags:
      - "auction"
      summary: "Delete ALL auctions"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GenericResponse"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  
  
  
  
  
  
  
  
  
  /bid/{id}:
    get:
      tags:
      - "bid"
      summary: "Get bid by id"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Numeric ID of the bid to get.
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Bid"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  
    delete:
      tags:
      - "bid"
      summary: "Delete bid by id"
      produces:
      - "application/json"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: Numeric ID of the bid to delete.
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Bid"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  
  /bids:
    post:
      tags:
      - "bid"
      summary: "Create new bid"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created bid"
        required: true
        schema:
          $ref: "#/definitions/BidReq"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Bid"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  
    get:
      tags:
      - "bid"
      summary: "Get bids"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Filters for get bids"
        required: true
        schema:
          $ref: "#/definitions/GetBids"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/BidsList"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
            
            
    delete:
      tags:
      - "bid"
      summary: "Delete ALL bids"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GenericResponse"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  
  
  




definitions:
  UserReq:
    type: "object"
    properties:
      email:
        type: "string"
      password:
        type: "string"
      role:
        type: "string"
  User:
    properties:
      email:
        type: "string"
      role:
        type: "string"
      id:
        type: "integer"
        format: "int32"
  GetUsers:
    type: "object"
    properties:
      offset:
        type: "integer"
        format: "int32"
      count:
        type: "integer"
        format: "int32"
      role:
        type: "string"
      sort:
        type: "string"
  UsersList:
    type: array
    items:
      $ref: '#/definitions/User'
  LoginReq:
    type: "object"
    properties:
      email:
        type: "string"
      password:
        type: "string"
  
  
  
  QuestionReq:
    type: "object"
    properties:
      auctionId:
        type: "integer"
        format: "int32"
      questionText:
        type: "string"
  
  Question:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      auctionId:
        type: "integer"
        format: "int32"
      questionText:
        type: "string"
      replyText:
        type: "string"
      isOpen:
        type: "boolean"
      askerId:
        type: "integer"
        format: "int32"
      replierId:
        type: "integer"
        format: "int32"
        
  
  GetQuestions:
    type: "object"
    properties:
      offset:
        type: "integer"
        format: "int32"
      count:
        type: "integer"
        format: "int32"
      askerId:
        type: "integer"
        format: "int32"
      replierId:
        type: "integer"
        format: "int32"
      sort:
        type: "string"
  
  QuestionsList:
    type: "array"
    items:
      $ref: "#/definitions/Question"
  
  AnswerReq:
    type: "object"
    properties:
      questionId:
        type: "integer"
        format: "int32"
      replyText:
        type: "string"
  
  
  Answer:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      questionId:
        type: "integer"
        format: "int32"
      replyText:
        type: "string"
      replierId:
        type: "integer"
        format: "int632"
        
  GetAnswers:
    type: "object"
    properties:
      offset:
        type: "integer"
        format: "int32"
      count:
        type: "integer"
        format: "int32"
      replierId:
        type: "integer"
        format: "int32"
      sort:
        type: "string"
  
  
  
  CategoryReq:
    type: "object"
    properties:
      categoryName:
        type: "string"
  
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      categoryName:
        type: "string"
        
  
  CategoriesList:
    type: "array"
    items:
      $ref: "#/definitions/Category"
  
  GetCategories:
    type: "object"
    properties:
      offset:
        type: "integer"
        format: "int32"
      count:
        type: "integer"
        format: "int32"
      sort:
        type: "string"
  
  
  SubCategoryReq:
    type: "object"
    properties:
      categoryId:
        type: "integer"
        format: "int32"
      subcategoryName:
        type: "string"
        
  SubCategory:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      categoryId:
        type: "integer"
        format: "int32"
      subcategoryName:
        type: "string"
        
  SubCategoriesList:
    type: "array"
    items:
      $ref: "#/definitions/SubCategory"
  
  GetSubCategories:
    type: "object"
    properties:
      offset:
        type: "integer"
        format: "int32"
      count:
        type: "integer"
        format: "int32"
      sort:
        type: "string"
  
  
  
  
  
  
  AttributeReq:
    type: "object"
    properties:
      subcategoryId:
        type: "integer"
        format: "int32"
      attributeName:
        type: "string"
        
  Attribute:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      subcategoryId:
        type: "integer"
        format: "int32"
      attributeName:
        type: "string"
        
  AttributesList:
    type: "array"
    items:
      $ref: "#/definitions/Attribute"
  
  GetAttributes:
    type: "object"
    properties:
      offset:
        type: "integer"
        format: "int32"
      count:
        type: "integer"
        format: "int32"
      sort:
        type: "string"
  
  
  
  ItemAttributeReq:
    type: "object"
    properties:
      attributeId:
        type: "integer"
        format: "int32"
      attributeValue:
        type: "string"
  
  ItemAttributeReqsList:
    type: "array"
    items:
      $ref: "#/definitions/ItemAttributeReq"
    
  
  
  
  
  ItemAttribute:
    type: "object"
    properties:
      attributeId:
        type: "integer"
        format: "int32"
      attributeName:
        type: "string"
      attributeValue:
        type: "string"
  
  ItemAttributesList:
    type: "array"
    items:
      $ref: "#/definitions/ItemAttribute"
    
  ItemReq:
    type: "object"
    properties:
      categoryId:
        type: "integer"
        format: "int32"
      subcategoryId:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      attributes:
        $ref: "#/definitions/ItemAttributeReqsList"
        
        
  Item:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      categoryId:
        type: "integer"
        format: "int32"
      categoryName:
        type: "string"
      subcategoryId:
        type: "integer"
        format: "int32"
      subcategoryName:
        type: "string"
      name:
        type: "string"
      attributes:
        $ref: "#/definitions/ItemAttributesList"
        
  ItemsList:
    type: "array"
    items:
      $ref: "#/definitions/Item"
  
  GetItems:
    type: "object"
    properties:
      offset:
        type: "integer"
        format: "int32"
      count:
        type: "integer"
        format: "int32"
      sort:
        type: "string"
      category:
        type: "integer"
        format: "int32"
      subcategory:
        type: "integer"
        format: "int32"
      attributeId:
        type: "integer"
        format: "int32"
      attributeValue:
        type: "string"
  
  
  
  
  
  
  
  AuctionReq:
    type: "object"
    properties:
      itemId:
        type: "integer"
        format: "int32"
      sellerId:
        type: "integer"
        format: "int32"
      initialPrice:
        type: "number"
        format: "float"
      minPrice:
        type: "number"
        format: "float"
      minIncrement:
        type: "number"
        format: "float"
      closingTime:
        type: "string"
    
        
  Auction:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      itemId:
        type: "integer"
        format: "int32"
      sellerId:
        type: "integer"
        format: "int32"
      initialPrice:
        type: "number"
        format: "float"
      minPrice:
        type: "number"
        format: "float"
      minIncrement:
        type: "number"
        format: "float"
      status:
        type: "string"
      currentHighestBid:
        type: "number"
        format: "float"
      winningBidId:
        type: "integer"
        format: "int32"
      closingTime:
        type: "string"
      item:
        $ref: "#/definitions/Item"
        
  AuctionsList:
    type: "array"
    items:
      $ref: "#/definitions/Auction"
  
  GetAuctions:
    type: "object"
    properties:
      offset:
        type: "integer"
        format: "int32"
      count:
        type: "integer"
        format: "int32"
      sort:
        type: "string"
      category:
        type: "integer"
        format: "int32"
      subcategory:
        type: "integer"
        format: "int32"
      attributeId:
        type: "integer"
        format: "int32"
      attributeValue:
        type: "string"
      sellerId:
        type: "integer"
        format: "int32"
  
  
  
  
  
  
  
  
  
  
  BidReq:
    type: "object"
    properties:
      auctionId:
        type: "integer"
        format: "int32"
      bidderId:
        type: "integer"
        format: "int32"
      bidValue:
        type: "number"
        format: "float"
      bidActive:
        type: "boolean"
    
        
  Bid:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      auctionId:
        type: "integer"
        format: "int32"
      bidderId:
        type: "integer"
        format: "int32"
      bidValue:
        type: "number"
        format: "float"
      bidActive:
        type: "boolean"
        
  BidsList:
    type: "array"
    items:
      $ref: "#/definitions/Bid"
  
  
  GetBids:
    type: "object"
    properties:
      offset:
        type: "integer"
        format: "int32"
      count:
        type: "integer"
        format: "int32"
      sort:
        type: "string"
      auctionId:
        type: "integer"
        format: "int32"
      bidderId:
        type: "integer"
        format: "int32"
      sellerId:
        type: "integer"
        format: "int32"
  
  
  
  
  
  
  
  
  
  
  
  
  
  GenericResponse:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
    required:
      - code
      - message
  # Schema for error response body
  Error:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
    required:
      - code
      - message